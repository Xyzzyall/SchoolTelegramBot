import structlog
from injector import inject

from voice_bot.domain.roles import UserRoles
from voice_bot.domain.services.users_service import UsersService
from voice_bot.telegram_di_scope import telegramupdate


@telegramupdate
class AlarmService:
    @inject
    def __init__(self, users: UsersService):
        self._users = users
        self._logger = structlog.get_logger()

    async def warning(self, text: str, src: type, **kwargs):
        await self._logger.warning(text, class_name=src, **kwargs)
        await self._users.send_text_message_to_roles(
            "*–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫* üò£ \n" +
            f"{text}\n" +
            f"–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {', '.join(f'{key}={val}' for key, val in kwargs.items())}",
            roles={UserRoles.sysadmin},
            send_as_is=True
        )

    async def error(self, text: str, src: type, **kwargs):
        await self._logger.error(str, class_name=src, **kwargs)
        await self._users.send_text_message_to_roles(
            f"""*–•—å—é—Å—Ç–æ–Ω, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã. –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Å–µ—Ä—å—ë–∑–Ω–∞—è –æ—à–∏–±–∫–∞* üí©
            {text}
            –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {', '.join(f'{key}={val}' for key, val in kwargs.items())}""",
            roles={UserRoles.sysadmin},
            send_as_is=True
        )
